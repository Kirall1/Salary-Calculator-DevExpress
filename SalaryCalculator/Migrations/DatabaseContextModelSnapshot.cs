// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculator.Data;

#nullable disable

namespace SalaryCalculator.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("SalaryCalculator.Models.RankCoefficient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Coefficient")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RankCoefficients");
                });

            modelBuilder.Entity("SalaryCalculator.Models.SalaryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EffectiveWorkingTimeFund")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourBaseRate")
                        .HasColumnType("TEXT");

                    b.Property<int>("HoursOfWorkPerDay")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MonthlyBaseRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Performer")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PremiumCoefficient")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RankCoefficientId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Salary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RankCoefficientId");

                    b.ToTable("SalaryDetails");
                });

            modelBuilder.Entity("SalaryCalculator.Models.SalaryDetail", b =>
                {
                    b.HasOne("SalaryCalculator.Models.RankCoefficient", "RankCoefficient")
                        .WithMany("Details")
                        .HasForeignKey("RankCoefficientId");

                    b.Navigation("RankCoefficient");
                });

            modelBuilder.Entity("SalaryCalculator.Models.RankCoefficient", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
